name: QA

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  job_tests:
    name: Run `go test`
    runs-on: ubuntu-latest

    strategy:
      matrix:
        go: [ '1.14' ]

    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Setup Go
      uses: actions/setup-go@v1
      with:
        go-version: ${{ matrix.go }}
    - name: Prepare CodeCoverage Reporter
      run: |
        curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
        chmod +x ./cc-test-reporter
        GIT_BRANCH="${GITHUB_REF/refs\/heads\//}" GIT_COMMIT_SHA=$GITHUB_SHA ./cc-test-reporter before-build
    - name: Execute tests
      run: go test -coverprofile c.out ./...
    - name: Upload CodeCoverage
      run: GIT_BRANCH="${GITHUB_REF/refs\/heads\//}" GIT_COMMIT_SHA=$GITHUB_SHA ./cc-test-reporter after-build --coverage-input-type gocov --prefix $(go list -m) --exit-code $?
      env:
        CC_TEST_REPORTER_ID: ${{ secrets.CC_TEST_REPORTER_ID }}
